//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssetManager.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>CBaseLayout_MyGui.h</string>
  <string>CBillboardManager.h</string>
  <string>CTextOutput.h</string>
  <string>OgreConsole.h</string>
  <string>CScriptManager.h</string>
  <string>OldPathway.h</string>
  <string>SoundEnginePrereqs.h</string>
  <string>SharedPointer.h</string>
  <string>CFpsFrameListener.h</string>
  <string>CFrameListenerFramework.h</string>
  <string>CPlayerAttributesComponent.h</string>
  <string>IPhysicsStrategy.h</string>
  <string>ICharacterController.h</string>
  <string>IPhysicsRagdoll.h</string>
  <string>IItemProfile.h</string>
  <string>IItemFactory.h</string>
  <string>IInventoryItem.h</string>
  <string>IGuiStrategy.h</string>
  <string>IMission.h</string>
  <string>IAiReactionComponent.h</string>
  <string>ICamera.h</string>
  <string>Defines.h</string>
  <string>CUtility.h</string>
  <string>CRagdollBoneInformation.h</string>
  <string>QueryStrings.h</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection ScriptingExcludes {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["ScriptingExcludes"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n          Copy Assets:\r\n          This tab will copy all assets given a root di" +
            "rectory, and will output it all into the output directory.  Using the Merge Mate" +
            "rials checkbox will copy all the materials into one file.  This is useful when h" +
            "aving to manage hundreds of lines of materials, and finding multiple material na" +
            "mes.\r\n\r\n          Material Check:\r\n          Used to run validation rules on a m" +
            "aterial file.  The only validation rule coded now is a check for multiple names." +
            "\r\n\r\n          Archive:\r\n          Used to generate config XML for specifying dir" +
            "ectory and zip archives.\r\n\r\n          Profiles:\r\n          Used to generate XML " +
            "for inventory profiles in scene files (scx).\r\n\r\n          Code Generator:\r\n     " +
            "     Game Object Plugin, given an asset directory, will generate boilerplate plu" +
            "gin code for every mesh file in the asset directory.  Compress button will take " +
            "all the files in the asset directory and compress it in into a signle zip file. " +
            " This button is ment to be used once all the game oject code is generated, becau" +
            "se the code will fail unless the asset can be foud so you might as well add it t" +
            "o the archive.\r\n\r\n          Scripting:\r\n          Used to generate script bindin" +
            "gs.  Get a directory listing fo the include directories you want to use for bind" +
            "ing.  Then generate the packaging files.\r\n\r\n          Todo:\r\n          1. Add va" +
            "lidation to particles and overlays\r\n          2. These will also need to split u" +
            "p into there own just like materials and accessed by name and not file name.\r\n  " +
            "        3. When updating the material, if the name is changed, change it in the " +
            "Db.\"\r\n        ")]
        public string Help {
            get {
                return ((string)(this["Help"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("4.1182")]
        public float StandardSize {
            get {
                return ((float)(this["StandardSize"]));
            }
        }
    }
}
