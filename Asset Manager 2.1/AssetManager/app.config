<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="AssetManager.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <connectionStrings>
    <add name="AssetManagerEntities" connectionString="metadata=res://*/AssetManagerModel.csdl|res://*/AssetManagerModel.ssdl|res://*/AssetManagerModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=.\;initial catalog=AssetManager;persist security info=True;user id=AssetManager;password=t00lb0x;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <applicationSettings>
    <AssetManager.Properties.Settings>
      <setting name="ScriptingExcludes" serializeAs="Xml">
        <value>
          <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <string>CBaseLayout_MyGui.h</string>
            <string>CBillboardManager.h</string>
            <string>CTextOutput.h</string>
            <string>OgreConsole.h</string>
            <string>CScriptManager.h</string>
            <string>OldPathway.h</string>
            <string>SoundEnginePrereqs.h</string>
            <string>SharedPointer.h</string>
            <string>CFpsFrameListener.h</string>
            <string>CFrameListenerFramework.h</string>
            <string>CPlayerAttributesComponent.h</string>
            <string>IPhysicsStrategy.h</string>
            <string>ICharacterController.h</string>
            <string>IPhysicsRagdoll.h</string>
            <string>IItemProfile.h</string>
            <string>IItemFactory.h</string>
            <string>IInventoryItem.h</string>
            <string>IGuiStrategy.h</string>
            <string>IMission.h</string>
            <string>IAiReactionComponent.h</string>
            <string>ICamera.h</string>
            <string>Defines.h</string>
            <string>CUtility.h</string>
            <string>CRagdollBoneInformation.h</string>
            <string>QueryStrings.h</string>
          </ArrayOfString>
        </value>
      </setting>
      <setting name="Help" serializeAs="String">
        <value>
          Copy Assets:
          This tab will copy all assets given a root directory, and will output it all into the output directory.  Using the Merge Materials checkbox will copy all the materials into one file.  This is useful when having to manage hundreds of lines of materials, and finding multiple material names.

          Material Check:
          Used to run validation rules on a material file.  The only validation rule coded now is a check for multiple names.

          Archive:
          Used to generate config XML for specifying directory and zip archives.

          Profiles:
          Used to generate XML for inventory profiles in scene files (scx).

          Code Generator:
          Game Object Plugin, given an asset directory, will generate boilerplate plugin code for every mesh file in the asset directory.  Compress button will take all the files in the asset directory and compress it in into a signle zip file.  This button is ment to be used once all the game oject code is generated, because the code will fail unless the asset can be foud so you might as well add it to the archive.

          Scripting:
          Used to generate script bindings.  Get a directory listing fo the include directories you want to use for binding.  Then generate the packaging files.

          Todo:
          1. Add validation to particles and overlays
          2. These will also need to split up into there own just like materials and accessed by name and not file name.
          3. When updating the material, if the name is changed, change it in the Db."
        </value>
      </setting>
      <setting name="StandardSize" serializeAs="String">
        <value>4.1182</value>
      </setting>
    </AssetManager.Properties.Settings>
  </applicationSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>