//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssetManager.Dal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AssetManagerEntities : DbContext
    {
        public AssetManagerEntities()
            : base("name=AssetManagerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Asset> Assets { get; set; }
        public virtual DbSet<AssetDependency> AssetDependencies { get; set; }
        public virtual DbSet<AssetList> AssetLists { get; set; }
        public virtual DbSet<AssetType> AssetTypes { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<MeshType> MeshTypes { get; set; }
        public virtual DbSet<Profile> Profiles { get; set; }
    
        public virtual int DeleteAssetFromProfile(Nullable<int> assetId, Nullable<int> profileId)
        {
            var assetIdParameter = assetId.HasValue ?
                new ObjectParameter("AssetId", assetId) :
                new ObjectParameter("AssetId", typeof(int));
    
            var profileIdParameter = profileId.HasValue ?
                new ObjectParameter("ProfileId", profileId) :
                new ObjectParameter("ProfileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAssetFromProfile", assetIdParameter, profileIdParameter);
        }
    
        public virtual int DeleteProfile(Nullable<int> profileId)
        {
            var profileIdParameter = profileId.HasValue ?
                new ObjectParameter("ProfileId", profileId) :
                new ObjectParameter("ProfileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProfile", profileIdParameter);
        }
    
        public virtual ObjectResult<Asset> GetRootAssets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asset>("GetRootAssets");
        }
    
        public virtual ObjectResult<Asset> GetRootAssets(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asset>("GetRootAssets", mergeOption);
        }
    }
}
